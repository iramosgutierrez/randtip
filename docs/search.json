[{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://iramosgutierrez.github.io/randtip/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2021 Rafael Molina-Venegas, Ignacio Ramos-Gutierrez, Herlander Lima  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. randtip Copyright (C) 2021 Rafael Molina-Venegas, Ignacio Ramos-Gutierrez, Herlander Lima This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://iramosgutierrez.github.io/randtip/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2022). randtip: Package (One Line, Title Case). R package version 0.0.0.9000.","code":"@Manual{,   title = {randtip: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"https://iramosgutierrez.github.io/randtip/index.html","id":"randtip","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"package development currently undergoing code reformatting. Therefore, caution early user incorrect behavior happen appreciate detected errors filed new issue. work currently published bioRxiv can found www.biorxiv.org/content/10.1101/2022.01.04.474924v1","code":""},{"path":"https://iramosgutierrez.github.io/randtip/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"","code":"install.packages(\"devtools\") library(devtools)  devtools::install_github(\"iramosgutierrez/randtip\")  library(randtip)"},{"path":"https://iramosgutierrez.github.io/randtip/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"What the Package Does (One Line, Title Case)","text":"Information usage randtip can found Tutorial randtip.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/build.info.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a 'info' data frame. — build.info","title":"Create a 'info' data frame. — build.info","text":"Function create 'info' object given list species.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/build.info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a 'info' data frame. — build.info","text":"","code":"build.info(   species,   tree = NULL,   find.ranks = TRUE,   db = \"ncbi\",   mode = \"backbone\",   interactive = FALSE,   genus = FALSE )"},{"path":"https://iramosgutierrez.github.io/randtip/reference/build.info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a 'info' data frame. — build.info","text":"species character vector single-column data frame including species interest. Word breakers must blanks (\" \") underscores (\"_\"). tree 'phylo' object backbone tree. can set NULL mode set \"list\". find.ranks Logical. TRUE, taxonomic information retrieved identify supra-generic MDCCs PUTs. db Taxonomic data base search find.ranks set TRUE.Accepted values 'ncbi' (default), 'itis', 'gbif' 'bold'. mode mode set \"list\", info file created using species given species argument. \"backbone\" mode specified, 'info' also include tips included backbone tree. interactive Logical. Whether ambiguous species names resolved manually user filled automatically 'NA' retrieving taxonomic information. genus Logical. Whether genus-level backbone tree expanded. set TRUE, tips backbone tree taxa species vector must represent genera.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/build.info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a 'info' data frame. — build.info","text":"randtip 'info' data frame","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/build.info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a 'info' data frame. — build.info","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/check.info.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to check randtip's files. — check.info","title":"Function to check randtip's files. — check.info","text":"Function account PUT status species 'info', spelling errors, putative MDCCs phyletic nature groups PPCR species.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/check.info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to check randtip's files. — check.info","text":"","code":"check.info(info, tree, sim = 0.8)"},{"path":"https://iramosgutierrez.github.io/randtip/reference/check.info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to check randtip's files. — check.info","text":"info 'info' object. tree original backbone tree. sim Name similarity threshold detect possible misspellings tip labels. Default value 0.8. Similarity obtained stringsim function stringdist package. See stringsim details.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/check.info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to check randtip's files. — check.info","text":"data frame containing possible typographic errors, taxonomic ranks extracted 'info' phyletic nature .","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/check.info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to check randtip's files. — check.info","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/custom.branch.html","id":null,"dir":"Reference","previous_headings":"","what":"custom.branch — custom.branch","title":"custom.branch — custom.branch","text":"Bind PUTs completely customized tree branches","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/custom.branch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"custom.branch — custom.branch","text":"","code":"custom.branch(   tree,   edges,   rand.type = \"random\",   forceultrametric = FALSE,   prob = TRUE )"},{"path":"https://iramosgutierrez.github.io/randtip/reference/custom.branch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"custom.branch — custom.branch","text":"tree \"phylo\" object used backbone tree. edges matrix 5 character vector columns. Column 1 secifies PUT candidate branches row refer . Columns 2 3 must represent two species whose MRCA represents stem node candidate branches columns 4 5 two species whose MRCA define crown node. Note pair nodes may necessarily define one single branch set . Two identical species define tree tip rather internal node. pairs species columns 2&3 4&5 , set branches select defined complete clade ther MRCA. rand.type \"random\" \"polytomy\". Default value \"random\". forceultrametric Whether backbone tree forced ultrametric, case . Default value FALSE. prob Whether branch selection probability must proportional branch length equiprobable. Default value TRUE.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/custom.branch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"custom.branch — custom.branch","text":"expanded phylogeny.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/custom.branch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"custom.branch — custom.branch","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.info.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit an 'info' file using a simple function. — edit.info","title":"Edit an 'info' file using a simple function. — edit.info","text":"Function edit randtip's 'info' file.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit an 'info' file using a simple function. — edit.info","text":"","code":"# S3 method for info edit(info, PUTs, column = NULL, edit = NULL, remove.rows = FALSE)"},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit an 'info' file using a simple function. — edit.info","text":"info 'info' object. PUTs Character vector PUT (PUTs) edited removed. column column name edited specified PUTs. NULL value accepted remove.rows set TRUE. edit allowed value column info edited. NULL value accepted remove.rows set TRUE. remove.rows TRUE, specified PUTs eliminated 'info' object. Default FALSE.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit an 'info' file using a simple function. — edit.info","text":"'info' object including editions deletions asked.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Edit an 'info' file using a simple function. — edit.info","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit backbone tree using a simple function. — edit.tree","title":"Edit backbone tree using a simple function. — edit.tree","text":"Function edit backbone tree.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit backbone tree using a simple function. — edit.tree","text":"","code":"# S3 method for tree edit(tree, tips, edit = NULL, remove.tips = FALSE)"},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit backbone tree using a simple function. — edit.tree","text":"tree backbone tree. tips Character vector phylogenetic tips edited removed. edit vector length tips, including new labels specified phylogenetic tips. NULL value accepted remove.tips set TRUE. remove.tips TRUE, specified tips pruned backbone tree. Default FALSE.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit backbone tree using a simple function. — edit.tree","text":"backbone tree including requested tip editions deletions.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/edit.tree.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Edit backbone tree using a simple function. — edit.tree","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/get.clade.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract a subtree representing a specified clade. — get.clade","title":"Function to extract a subtree representing a specified clade. — get.clade","text":"Obtain phylogenetic tree representing specified clade split original backbone tree. Note tree splitting performed MRCA node taxa included clade 'info' object.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/get.clade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract a subtree representing a specified clade. — get.clade","text":"","code":"get.clade(info, tree, clade)"},{"path":"https://iramosgutierrez.github.io/randtip/reference/get.clade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract a subtree representing a specified clade. — get.clade","text":"info 'info' ('input') object. tree original backbone tree split. clade Clade extracted","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/get.clade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to extract a subtree representing a specified clade. — get.clade","text":"list four objects used automatic plotting using plot.clade function. 'Tree' contain splitted tree; 'info' contain handed info file; 'rank' contain taxonomic rank specified clade, 'clade' contain clade name.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/get.clade.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to extract a subtree representing a specified clade. — get.clade","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/info2input.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert 'info' to'input'. — info2input","title":"Convert 'info' to'input'. — info2input","text":"Convert 'info' object 'input' one.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/info2input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert 'info' to'input'. — info2input","text":"","code":"info2input(info, tree)"},{"path":"https://iramosgutierrez.github.io/randtip/reference/info2input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert 'info' to'input'. — info2input","text":"info 'info' data frame, including customized binding parameters. tree Backbone tree.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/info2input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert 'info' to'input'. — info2input","text":"'input' data frame can fed rand.tip function alongside backbone tree expand tree.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/info2input.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert 'info' to'input'. — info2input","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/plot.clade.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot a subtree representing a specified clade. — plot.clade","title":"Function to plot a subtree representing a specified clade. — plot.clade","text":"Plot phylogenetic tree splitted backbone tree using get.clade function.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/plot.clade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot a subtree representing a specified clade. — plot.clade","text":"","code":"# S3 method for clade plot(   get.clade.out,   ppcr.col = \"#4a8a21\",   nonppcr.col = \"#48bce0\",   unknown.col = \"#adadad\",   ... )"},{"path":"https://iramosgutierrez.github.io/randtip/reference/plot.clade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot a subtree representing a specified clade. — plot.clade","text":"get.clade.Output get.clade function. ppcr.col Color represent tips included specified clade. Default value green. nonppcr.col Color represent tips included different clade specified one (taxonomic rank). Default value blue. unknown.col Color represent tips without taxonomic information specifed clade's taxonomic rank. Default value grey ... Arguments pass plot.phylo function.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/plot.clade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot a subtree representing a specified clade. — plot.clade","text":"plot representing clade specified get.clade function using selected colors.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/plot.clade.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to plot a subtree representing a specified clade. — plot.clade","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/plot.custom.branch.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.custom.branch — plot.custom.branch","title":"plot.custom.branch — plot.custom.branch","text":"Function help users visualize candidate branches tip insertion stick..branch function","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/plot.custom.branch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.custom.branch — plot.custom.branch","text":"","code":"# S3 method for custom.branch plot(   tree,   edges,   PUT = NULL,   candidate.col = \"#bf2828\",   forbidden.col = \"#3d3d3d\",   candidate.lwd = 2,   forbidden.lwd = 1,   ... )"},{"path":"https://iramosgutierrez.github.io/randtip/reference/plot.custom.branch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.custom.branch — plot.custom.branch","text":"tree \"phylo\" object used backbone tree. edges matrix 5 character vector columns. Column 1 secifies PUT candidate branches row refer . Columns 2 3 must represent two species whose MRCA represents stem node candidate branches columns 4 5 two species whose MRCA define crown node. Note pair nodes may necessarily define one single branch set . Two identical species define tree tip rather internal node. pairs species columns 2&3 4&5 , set branches select defined complete clade MRCA. PUT edges data frame refers one PUT, one's set branches must plotted. candidate.col Color represent branches defined edges data frame candidates. Default value red. forbidden.col Color represent branches defined edges data frame candidates. Default value black. candidate.lwd Line width represent branches defined edges data frame candidates. Default value 2. forbidden.lwd Line width represent branches defined edges data frame candidates. Default value 1. ... Arguments pass plot.phylo function.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/put.tip.col.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PUT or placed color pattern — put.tip.col","title":"Get PUT or placed color pattern — put.tip.col","text":"Set color pattern distinguish phylogenetically placed taxa PUTs plotting trees plot.phylo function ‘ape’ R package using tip.color argument","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/put.tip.col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PUT or placed color pattern — put.tip.col","text":"","code":"put.tip.col(newtree, oldtree, placed.col = \"#adadad\", put.col = \"#C23B23\")"},{"path":"https://iramosgutierrez.github.io/randtip/reference/put.tip.col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PUT or placed color pattern — put.tip.col","text":"newtree expanded phylogenetic tree. oldtree original backbone tree PUTs bound. placed.col Color plot phylogenetic tips already placed original backbone tree. Default value grey. put.col Color plot bound PUTs new tree. Default value red.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/put.tip.col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PUT or placed color pattern — put.tip.col","text":"vector length equal number tips newtree, used tip.color plot.phylo function.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/put.tip.col.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get PUT or placed color pattern — put.tip.col","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/rand.tip.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree expansion function. — rand.tip","title":"Tree expansion function. — rand.tip","text":"Expand phylogeny binding PUTs backbone tree.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/rand.tip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree expansion function. — rand.tip","text":"","code":"rand.tip(   input,   tree,   rand.type = \"random\",   polyphyly.scheme = \"largest\",   use.paraphyletic = TRUE,   use.singleton = TRUE,   use.stem = FALSE,   respect.mono = TRUE,   respect.para = TRUE,   clump.puts = TRUE,   prob = TRUE,   prune = TRUE,   forceultrametric = FALSE,   verbose = TRUE )"},{"path":"https://iramosgutierrez.github.io/randtip/reference/rand.tip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tree expansion function. — rand.tip","text":"input 'input' data frame obtained info2input fuction. tree backbone tree. rand.type PUTs specified individually 'input', randomization type (\"random\" \"polytomy\") must carried . Default value \"random\". polyphyly.scheme PUTs specified individually 'input', polyphyly scheme (\"largest\", \"complete\" \"frequentist\") must used. Default value \"largest\". use.paraphyletic PUTs specified individually 'input', whether paraphyletic clades taken account . Default value TRUE. use.singleton PUTs specified individually 'input', singleton MDCCs considered binding sister species, contrarily binding performed anywhere parent node. Default value TRUE. use.stem PUTs specified individually 'input', whether stem branch considered candidate binding.  Default value FALSE. respect.mono PUTs specified individually 'input', whether monophyletic groups respected binding PUT. Default value TRUE. respect.para PUTs specified individually 'input', whether paraphyletic groups respected binding PUT. Default value TRUE. clump.puts PUTs specified individually 'input', whether co-ranked PUTs clumped together phylogeny case taxonomic group missing tree. also clump conspecific PUTs. Default value TRUE. prob PUTs specified individually 'input', whether branch selection probability must proportional branch length equiprobable. Default value TRUE. prune Whether newly expanded tree include species user's list. Default value TRUE. forceultrametric Whether backbone tree forced ultrametric, case . Default value FALSE. verbose Whether print information flow function. Default value TRUE.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/rand.tip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tree expansion function. — rand.tip","text":"expanded phylogeny.","code":""},{"path":"https://iramosgutierrez.github.io/randtip/reference/rand.tip.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tree expansion function. — rand.tip","text":"Ignacio Ramos-Gutierrez, Rafael Molina-Venegas, Herlander Lima","code":""}]
