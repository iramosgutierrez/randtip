% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/custom_branch.R
\name{plot.custom.branch}
\alias{plot.custom.branch}
\title{plot.custom.branch}
\usage{
\method{plot}{custom.branch}(
  tree,
  edges,
  PUT = NULL,
  candidate.col = "#bf2828",
  forbidden.col = "#3d3d3d",
  candidate.lwd = 2,
  forbidden.lwd = 1,
  ...
)
}
\arguments{
\item{tree}{"phylo" object used as backbone tree.}

\item{edges}{matrix with 5 character vector columns.
Column 1 secifies the PUT to which the candidate branches in
the row refer to.
Columns 2 and 3 must represent two species whose MRCA represents the
stem node of candidate branches and
columns 4 and 5 two species whose MRCA define the crown node.
Note that a pair of nodes may not necessarily define one single branch
but a set of them.
Two identical species will define a tree tip rather than an internal
node.
If the pairs of species in columns 2&3 and 4&5 are the same, the
set of branches to select will be defined as the complete clade
below their MRCA.}

\item{PUT}{If the \code{edges} data frame refers to more than one PUT,
which one's set of branches must be plotted.}

\item{candidate.col}{Color to represent branches defined by the \code{edges}
data frame as candidates. Default value is red.}

\item{forbidden.col}{Color to represent branches not defined by the
\code{edges} data frame as candidates. Default value is
black.}

\item{candidate.lwd}{Line width to represent branches defined by the
\code{edges} data frame as candidates. Default value 2.}

\item{forbidden.lwd}{Line width to represent branches not defined by the
\code{edges} data frame as candidates. Default value 1.}

\item{...}{Arguments to pass through \code{\link[ape]{plot.phylo}} function.

#' @examples
cats.edges <- data.frame("PUT"= "Felis_catus", "parent1"= "Felis_silvestris",
"parent2"= "Felis_silvestris", "child1"= "Felis_silvestris", "child2"= "Felis_silvestris")
plot.custom.branch(tree=cats, edges=cats.edges)}
}
\description{
Function to help users visualize the candidate branches for tip insertion with \code{\link{stick.to.branch}} function
}
